// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["connectOrCreate", "transactionApi"]
  previewFeatures = ["uncheckedScalarInputs"]
}

generator jsonSchema {
  provider = "node node_modules/prisma-json-schema-generator"
  // output = "custom-output-path"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id        Int     @default(autoincrement()) @id
  email     String  @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  lastName  String?
  firstName String?
  social    Json?
  isAdmin   Boolean? @default(false)
  // Relation fields
  Post      Post[]
  Tokens    Token[]
}

model Post {
  authorId  Int?
  content   String?
  id        Int      @default(autoincrement()) @id
  published Boolean? @default(false)
  title     String

  // Relation fields
  User      User?    @relation(fields: [authorId], references: [id])
}

model Token {
  id        Int     @default(autoincrement()) @id
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt
  
  type       TokenType
  emailToken String?   @unique // Only used for short lived email tokens
  valid      Boolean   @default(true)
  expiration DateTime   

  // Relation fields
  user       User @relation(fields: [userId], references: [id])
  userId     Int
}

enum TokenType {
  EMAIL // used as a short-lived token sent to the user's email
  API
}
